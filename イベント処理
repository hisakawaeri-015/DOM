イベント処理：「ボタンをクリックしたとき」「画面をスクロールしたとき」など、特定のタイミングでDOM操作を行いたい場合

イベント処理：addEventListener()メソッド(アッドイベントリスナー)
---------------------------------------------------------------------
HTML要素.addEventListener('イベントの種類', アロー関数);
(上と下は=)
HTML要素.addEventListener('イベントの種類', () => {
  イベント処理
});
--------------------------------------------------------------------
※HTML要素の部分：getElementById()メソッドなどを使って取得したHTML要素を記述
※イベントの種類の部分：
★イベントの種類	　▲処理が実行されるタイミング
★click	　　　　　　▲クリックしたとき（マウスボタンを押して離したとき）
★mousedown	　　　　▲マウスボタンを押したとき
★mouseup	　　　　　▲マウスボタンを離したとき
★mousemove	　　　　▲マウスカーソルを移動したとき
★keydown	　　　　　▲キーボードのキーを押したとき
★keyup	　　　　　　▲キーボードのキーを離したとき
★submit	　　　　　▲フォームを送信したとき
★focus	　　　　　　▲HTML要素にフォーカスしたとき
★scroll	　　　　　▲画面をスクロールしたとき
-------------------------------------------------------------------------
  // output-btnというidを持つHTML要素を取得し、定数に代入する
  const btn = document.getElementById('output-btn');
 
  // HTML要素がクリックされたときにイベント処理を実行する
  btn.addEventListener('click', () => {
    console.log('クリックされました！');
  });
-----------------------------------------------------------------------
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="UTF-8">
  <title>イベント処理</title>
</head>

<body>
  <button id="output-btn">文字列の出力</button>

  <button id="add-btn">リストの追加</button>
  <ul id="parent-list"></ul>

  <script src="js/event.js"></script>
</body>

</html>
--------------------------------------------------------------------
  // add-btnというidを持つHTML要素を取得し、定数に代入する
  const addBtn = document.getElementById('add-btn');
  // parent-listというidを持つHTML要素を取得し、定数に代入する
  const parentList = document.getElementById('parent-list');


  addBtn.addEventListener('click', () => {
    // 新しくli要素を作成し、定数に代入する
    const childList = document.createElement('li');

    //作成したli要素にテキストを追加
    childList.textContent = 'これはリスト要素です';

    // ul要素の末尾にli要素を追加する
    parentList.appendChild(childList);
  });
